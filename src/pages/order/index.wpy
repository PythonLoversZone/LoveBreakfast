<style scoped lang="less" rel="stylesheet/less">
    @import "../../styles/common";

    @borderColor: #efefef;
    @normalColor: #666666;
    @stateColor: #b3b3b3;
    @buttonFtColor: #ffffff;
    @itemBorder: 1px solid @borderColor;

    page {
      background: #f5f5f5;
      height: 100%;
    }
    .order-group{
      .fz24();
      padding-bottom: 30rpx;

      .order-item{
        border-top: @itemBorder;
        width: 100%;
        height: 260rpx;
        padding: 44rpx 36rpx 45rpx;
        box-sizing: border-box;

        &:nth-last-child(1){
          border-bottom: @itemBorder;
          margin-bottom: 10rpx;
        }

        .item-bd{
          height: 160rpx;
          display: flex;

            .good-img{
              width: 145rpx;
              height: 145rpx;
              border-radius: 145rpx;
            }

            .bd-detail{
              margin-left: 20rpx;
              flex: 1;
              display: flex;
              flex-direction: column;
              justify-content: space-between;
            }

          .bd-end{
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            align-items: flex-end;
            color: @stateColor;

            .operatorArea{

              button{
                background-color: @main_color;
                color: #ffffff;
                width: 160rpx;

                .fz24();
              }

              text{

              }
            }
          }

        }
      }

    }

    .doc{
      color: @normalColor;

      .fz28();
    }

    .doc-small{
      .fz24();
    }

    .doc-money{
      color: @main_color;
      font-family: @num_family;
    }

</style>
<template>
  <view class="order-group">
    <block wx:for="{{orderList}}" wx:key="{{OMcode}}" wx:index='index' wx:item='item'>
      <view class="order-item">
        <view class="item-bd" >
          <image class="good-img" src="{{item.Orderitems[0].PRimage}}"></image>
          <view class="bd-detail" @tap="showDetail({{item.OMid}})">
            <view class="doc">{{item.Orderitems[0].PRname}}</view>
            <view class="doc doc-small">{{item.OMtime}}</view>
            <view class="doc doc-small">数量: {{item.Orderitems[0].PRsalesvolume}}</view>
            <view class="doc doc-money">￥{{item.OMtotal}}</view>
          </view>
          <view class="bd-end">
              <view class="orderstate">
                {{item.OMstatus}}
              </view>
            <view class="operatorArea">

              <!--<button @tap="goEvaluatePage({{item.orderId}})" >评价</button>-->
              <button wx:if="{{item.OMstatus == '未支付'}}" @tap="toPay">立即支付</button>
              <button wx:elif ="{{item.OMstatus == '已完成'}}"
                      @tap="goEvaluatePage({{item.OMid}},{{item.Orderitems[0].PRid}},{{false}})">评价</button>
              <text wx:elif ="{{item.OMstatus == '已评价'}}"　
                    @tap="goEvaluatePage({{item.OMid}},{{item.Orderitems[0].PRid}},{{true}})">评价详情 ＞</text>
            </view>
          </view>
        </view>
        <view >
        </view>
      </view>
    </block>

  </view>

</template>

<script>
    import wepy from 'wepy';
    import api from '../../api/api';
    import tip from '../../utils/tip';


    export default class orderIndex extends wepy.page {
        config = {
            navigationBarTitleText: '订单'
        }
        data = {
          orderList: []
        }

        computed = {}

        //  获取订单列表
        async getOrderList(){
          let token = wepy.getStorageSync('token');
          let res;

          tip.loading();
          if(token){
            res = await api.get_order_list({
              token
            })

            tip.loaded();
            if(res.data.status == 200){
              this.orderList = res.data.data;
              this.$apply();
            }else{
              tip.error(res.data.message)
            }
          }else{
            this.$navigate('/pages/personal/login');
          }
        }

        onShow(){
          //  跳转页面时更新订单列表
          this.getOrderList();
        }

        methods = {
          //  去订单详情页
          showDetail(omId){
            this.$navigate('./orderDetail',{OMid: omId});
          },

          //  支付
          toPay(){
            return
            wx.login({
              success: function (res) {
                if (res.code) {
                  console.log(res.code, 'this is code')
                  let successFun = (res3) => {
                    let timeStamp = res3.data.timeStamp.toString()
                    wx.requestPayment({
                      'appId': res3.data.appId,
                      'timeStamp': timeStamp,
                      'nonceStr': res3.data.nonceStr,
                      'package': res3.data.package,
                      'signType': res3.data.signType,
                      'paySign': res3.data.paySign,
                      'success': function (res) {
                        tip.success("支付成功")
                        that.getAllOrder(that.token)
                        that.$apply()
                        console.log(res)
                      },
                      'fail': function (res) {
                        tip.error("支付失败")
                        console.log(res)
                      }
                    })
                  }
                  let failFun = (res) => {
                    console.log(res, 'fail!')
                    tip.error("服务器开小差了")
                  }
                  api.getPayParam({query: {OMid: param, code: res.code}}).then(successFun, failFun)
                } else {
                  console.log('获取用户登录态失败！' + res.errMsg)
                }
              }
            });
          },

          //  去评价页
          goEvaluatePage(omId,prId,readonly){
            if(typeof prId == 'string'){
              this.$navigate('./productEvaluate', {omId,prId,readonly});
            }else{
              tip.error('系统错误');
            }
          }
        }
    }
</script>
