<style lang="less" rel="stylesheet/less">
  @import "../../styles/common";
  .my-question{
    color: #fff;
    padding: 180rpx 90rpx 0;
    font-size: 35rpx;
    position: relative;;
    .m-one-question{

      .m-title{
        font-weight: bold;
        line-height: 60rpx;
      }
      .m-question-content{
        margin-top: 100rpx;
        height: 500rpx;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        align-content: center;
      }
    }
    .m-one{
      flex: 1;
      .m-label{
        display: inline-block;
        width: 80rpx;
      }
      .m-input-box{
        margin-bottom: 20rpx;
      }
      .m-input{
        width: 420rpx;
        height: 56rpx;
        line-height: 56rpx;
        background-color: #fff;
        border: 1px solid #eee;
        color: #c1c1c1;
        margin-left: 30rpx;
        margin-right: 20rpx;
        padding: 0 20rpx ;
        font-size: 24rpx;
        &.m-other{
          margin-left: 80rpx;
        }
      }
      .m-alert{
        width: 420rpx;
        margin-left: 30rpx;
      }
      .active{
        color: #f6d500;
      }
      .m-submit-btn{
        text-align: center;
        span{
          display: inline-block;
          width: 200rpx;
          height: 56rpx;
          line-height: 56rpx;
          text-align: center;
          background-color: #fff;
          border: 1px solid #eee;
          color: #000;
          margin-top: 70rpx;
        }
      }
      .m-last-content{
        position: fixed;
        bottom: 70rpx;
        right: 10rpx;
        width: 290rpx;
        line-height: 60rpx;
      }
    }
    .m-back{
      position: fixed;
      width: 100%;
      height: 100%;
      top:0;
      left: 0;
      z-index: -1;
      background-color: #000;
    }
    .m-icon-next{
      position: fixed;
      right: 20rpx;
      top: 50%;
      transform: translateY(-32rpx);
      width: 66rpx;
      height: 66rpx;
    }
    .m-progress{
      border-radius: 5px;
      margin-top: 60rpx;
    }
  }
</style>
<template>
  <view class="my-question">
    <image src="{{back}}" class="m-back"></image>
    <view class="m-content">
      <mInput wx:if="{{question_data.VOtype == '填空题'}}" :list.sync="question_data"></mInput>
        <mCheck wx:if="{{question_data.VOtype == '单选题' || question_data.VOtype == '多选题'}}" :select.sync="now_select" :list.sync="question_data" @oneSelect.user="oneSelect"></mCheck>

          <!--<mLast></mLast>-->

    </view>

    <image src="../../images/icon-next.png" class="m-icon-next" @tap="nextTap"></image>
    <view class="m-progress">
      <progress percent="0" color="#fff" activeColor="#f6d500"/>
    </view>



  </view>
</template>
<script>
    import wepy from 'wepy';
    import api from '../../api/api';
    import tip from '../../utils/tip';
    import mInput from '../../components/question/m-input';
    import mCheck from '../../components/question/m-check';
    import mLast from '../../components/question/m-last';
    export default class Question extends wepy.page {
        config = {
            navigationBarTitleText: ''
        }
        data = {
          question_data:{},
          back:'',
          form_data:[],
          now_index:-1,
          now_select:null
        }
      components ={
          mInput,
          mCheck,
          mLast
      }
      async get_votes(id,no) {
        let that = this;
        tip.loading();
        let res = await api.get_votes({method:'GET',query:{
          VSid: id,
            VOno:no
          }});
        if(res.data.status == 200){
          that.question_data = res.data.data;
          if(that.question_data.VOtype != '填空题'){
            for(let i=0;i<that.question_data.votechoice.length;i++){
              that.question_data.votechoice[i].click = false;
            }
          }
          that.back = res.data.data.VObackgroud;
          that.$apply();
          tip.loaded();
        }else{
          tip.error(res.data.message);
        }
      }
      async make_vote(params) {
        let that = this;
        tip.loading();
        let res = await api.make_vote({method:'POST',query:params});
        if(res.data.status == 200){
          wx.setStorageSync('tel', params.UStelphone);
          tip.success('提交成功');
          wx.navigateTo({
            url:'/pages/questionnaire/questionResult?UScode=' + res.data.data.UScode + '&USpassword=' + res.data.data.USpassword
          })
          that.$apply();
          tip.loaded();
        }else{
          tip.error(res.data.message);
        }
      }
      onLoad(options) {
          if(options.VSid){
            this.get_votes(options.VSid,'');
            this.VSid = options.VSid;
          }
      }
      methods = {
        radioTap(j,v){
          for(let i=0;i<this.question_data.length;i++){
            this.question_data[j].choose = this.question_data[j].choice_items[v].VItext;
          }
        },
        nameInput(e){
          this.name = e.detail.value
        },
        telInput(e){
          this.tel = e.detail.value
        },
        submitTap(){
          if(this.name == ''){
            tip.alert('请填写姓名');
            return false
          }
          if(this.tel == ''){
            tip.alert('请填写联系方式');
            return false
          }
          let params = {};
          params.USname = this.name;
          params.UStelphone = this.tel;
          params.USchoose = [];
          for(let i=0;i<this.question_data.length;i++){
            if(!this.question_data[i].choose){
              tip.alert('请选择问题' + (i + 1 ));
              return false;
            }
          }
          for(let i=0;i<this.question_data.length;i++){
            if(this.question_data[i].choose){
              params.USchoose[i] = {};
              params.USchoose[i].VOno = this.question_data[i].VOno;
              params.USchoose[i].VNtext = this.question_data[i].choose;
            }
          }
          this.make_vote(params);
        },
        nextTap(){
          if(this.now_index == -1 ){
            tip.error('请先选择选项');
            return false;
          }
          if(this.form_data[this.now_index] == ''){
              tip.error('请先选择选项');
              return false;
          }
          this.get_votes(this.VSid,this.now_select.VCnext);
        },
        oneSelect(i,list){
          let _arr = [].concat(this.form_data);
          let a = null;
          // for(let j=0;i<this.form_data.length;j++){
          //   if(list.VSid == this.form_data[j].VSid){
          //
          //   }
          // }
          if(list.VOtype == '单选题'){
            for(let x = 0;x<list.votechoice.length;x++){
              list.votechoice[x].click = false;
            }
          }
          list.votechoice[i].click = true;
          _arr.push(list);
          this.now_index = Number(this.now_index) +1 ;
          this.form_data = [].concat(_arr);
          this.now_select = list.votechoice[i];
          this.$apply();
        }
      }
    }
</script>

