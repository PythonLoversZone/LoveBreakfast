<template>
  <view class="m-place-order">
    <head class="m-head">
      <view class="m-head-back"></view>
      <view class="m-head-content">
        <repeat for="{{all_picker}}" key="index" index="index" item="item">
          <Pick :picker.sync="item" ></Pick>
        </repeat>
        <view class="m-li-more">联系人：{{Uname}}</view>
        <view class="m-li-more">联系方式：{{Utel}}</view>
      </view>
    </head>
    <view class="m-content">
      <repeat for="{{all_order}}" key="index" index="index" item="item">
        <Order :order.sync="item"></Order>
      </repeat>
      <view class="m-li-m">
        <view class="m-label">优惠券</view>
        <view class="m-coupon">满30减40</view>
      </view>
      <view class="m-li-more">合计：<i class="m-price">￥{{total_money}}</i></view>
    </view>
    <view class="m-remark">
      <view class="m-li">
        <picker bindchange="PickerChangeWay" value="{{payment_method.index}}" range="{{payment_method.array}}">
          <view class="picker">
            支付方式：<image src="/images/icon-more.png" style="width: 42rpx;height: 36rpx;float: right"></image><i class="m-select">{{payment_method.array[payment_method.index]}}</i>
          </view>
        </picker>
      </view>
      <view class="m-li">
        <picker bindchange="PickerChangeNum" value="{{number_of_meals.index}}" range="{{number_of_meals.array}}">
          <view class="picker">
            用餐人数：<image src="/images/icon-more.png" style="width: 42rpx;height: 36rpx;float: right"></image><i class="m-select">{{number_of_meals.array[number_of_meals.index]}}</i>
          </view>
        </picker>
      </view>
      <view class="m-li">
        <view class="m-input-box">
          备注：<input class="m-input" value="{{Oabo}}" bindinput="bindKeyInput"  maxlength="200" placeholder="备注信息" />
        </view>

      </view>
    </view>
    <foot class="m-foot">
      <view class="m-car">
        <!--<image src="/images/car.png" style="width: 100rpx;height: 100rpx;"></image>-->
        <!--<view class="m-num">2</view>-->
        <view>合计：<text class="m-price">￥{{total_money}}</text></view>
      </view>
      <view class="m-btn m-active" @tap="placeAnOrder">支付</view>
    </foot>
  </view>
</template>
<script >
  import wepy from 'wepy';
  import Pick from '../components/common/picker'
  import Order from '../components/common/order'
  import tip from '../utils/tip'
  import api from '../api/api'
  export default class PlaceAnOrder extends wepy.page{
    config = {
      navigationBarTitleText: ''
    }
    components = {
      Pick:Pick,
      Order:Order
    }
    data = {
      Oabo:'',
      all_picker:[
        {
          sort:'选择地铁线路',
          array: ['1号线', '2号线', '4号线'],
          id:['1号线'],
          index:0,
          type:''
        },
        {
          sort:'选择取餐站点',
          array: [],
          id:[],
          index:0,
          type:''
        },
        {
          sort:'选择出站口',
          array: [],
          id:[],
          index:0,
          type:''
        },
        {
          sort:'取餐日期',
          value:'2018-04-06',
          type:'date'
        },
        {
          sort:'最早时间',
          value:'08:00',
          type:'time'
        },
        {
          sort:'最晚时间',
          value:'08:00',
          type:'time'
        },
      ],
      all_order:[],
      Uname:'',
      Utel:'',
      payment_method:
        {
          sort:'支付方式',
          array: ['微信支付'],
          index:0,
        },
      number_of_meals:{
        sort:'用餐人数',
        array: ['1', '2', '3', '4','5','6','7','8','9','10'],
        index:0,
      },
      total_money:0,
    }
    events = {
      'pickerChange':function(e){
        if(e.sort == '选择取餐站点'){
          this.getExitInfo(e.id[e.index])
        }else if(e.sort == '选择地铁线路'){
          this.getCationInfo(e.array[e.index])
        }
        this.$apply();
      }
    }
    async getLineInfo(params) {
      let that = this;
      tip.loading();
      wx.request({
        url:api.get_line,
        method:'GET',
        header:{
          'content-type':'application/json',
        },
        success:function (res) {
          tip.loaded()
          if(res.data.status == '200'){
            that.all_picker[0].array = that.deal_arr(res.data.data,'Lline');
            that.$apply()
          }
        }
      })
    }
    async getCationInfo(params) {
      let that = this;
      tip.loading();
      wx.request({
        url:api.get_all_location,
        method:'GET',
        data:{Lline:params},
        header:{
          'content-type':'application/json',
        },
        success:function (res) {
          tip.loaded()
          if(res.data.status == '200'){
            that.all_picker[1].array = that.deal_arr(res.data.data,'Lname');
            that.all_picker[1].id = that.deal_arr(res.data.data,'Lid');
            that.$apply()
          }
        }
      })
    }
    async getExitInfo(params) {
      let that = this;
      tip.loading();
      wx.request({
        url:api.get_lno,
        method:'GET',
        data:{Lid:params},
        header:{
          'content-type':'application/json',
        },
        success:function (res) {
          tip.loaded()
          if(res.data.status == '200'){
            that.all_picker[2].array = that.deal_arr(res.data.data,'Lno');
            that.$apply()
          }
        }
      })
    }
    async getPersonInfo(params) {
      let that = this;
      tip.loading();
      wx.request({
        url:api.get_order_user,
        method:'GET',
        data:{token:params},
        header:{
          'content-type':'application/json',
        },
        success:function (res) {
          tip.loaded()
          if(res.data.status == '200'){
            that.Uname = res.data.data.Uname;
            that.Utel = res.data.data.Utel;
            that.$apply()
          }
        }
      })
    }
    async getAllCar(params) {
      let that = this;
      tip.loading();
      wx.request({
        url:api.get_all_car,
        method:'GET',
        data:{token:params},
        header:{
          'content-type':'application/json',
        },
        success:function (res) {
          tip.loaded()
          that.total_money = 0;
          if(res.data.status == '200'){
            that.all_order = res.data.data;
            for(let i=0;i< that.all_order.length;i++){
              that.total_money += Number(that.all_order[i].Pnum * that.all_order[i].Pprice)
            }
            //
            that.$apply()
          }
        }
      })
    }
    async getAllYou(params) {
      let that = this;
      tip.loading();
      wx.request({
        url:api.get_cardpkg,
        method:'GET',
        data:{token:params},
        header:{
          'content-type':'application/json',
        },
        success:function (res) {
          tip.loaded()
//          that.total_money = 0;
          if(res.data.status == '200'){
            console.log(res)
            that.$apply()
          }
        }
      })
    }
    async submitAll(token,params) {
      let that = this;
      tip.loading();
      wx.request({
        url:api.make_main_order+'?token='+token,
        method:'POST',
        data:params,
        header:{
          'content-type':'application/json',
        },
        success:function (res) {
          tip.loaded()
          that.total_money = 0;
          if(res.data.status == '200'){
            that.all_order = res.data.data;
            for(let i=0;i< that.all_order.length;i++){
              that.total_money += Number(that.all_order[i].Pnum * that.all_order[i].Pprice)
            }
            //
            that.$apply()
          }
        }
      })
    }
    deal_arr(data,name){
      let _arr = [];
      for(let i = 0;i<data.length;i++){
        _arr.push(data[i][name])
      }
      return _arr;
    }
    onLoad(option){
      let date = new Date();
      let token ='';
      this.all_picker[3].value = date.getFullYear() + '-' + ((date.getMonth()+1)>=10 ?(date.getMonth()+1):'0'+(date.getMonth()+1) ) + '-' +(date.getDate()>=10?date.getDate():'0'+date.getDate())
      this.getLineInfo();
      wx.getStorage({
        key: 'token',
        success: function(res){
          token = res.data
          this.getPersonInfo(token);
          this.getAllCar(token);
          this.getAllYou(token);
          that.$apply()
        }
      })

    }
    methods = {
      PickerChangeWay: function(e) {
        this.payment_method.index = e.detail.value;
        this.$apply()
      },
      PickerChangeNum: function(e) {
        this.number_of_meals.index = e.detail.value;
        this.$apply()
      },
      bindKeyInput(e){
        this.Oabo = e.detail.value;
        this.$apply();
      },
      placeAnOrder(){
        let params = {};
        let that = this;
        let token = '';
        let date = new Date();
        params ={
          "Otime":date.getFullYear() + '-' + ((date.getMonth()+1)>=10 ?(date.getMonth()+1):'0'+(date.getMonth()+1) ) + '-' +(date.getDate()>=10?date.getDate():'0'+date.getDate())+' '+date.getHours()+':'+date.getMinutes(),
          "Omintime":this.all_picker[3].value + ' '+this.all_picker[4].value ,
          "Omaxtime":this.all_picker[3].value + ' '+this.all_picker[5].value,
          "Lname":this.all_picker[1].array[this.all_picker[1].index],
          "Lno":this.all_picker[0].array[this.all_picker[0].index],
          "Lline":this.all_picker[2].array[this.all_picker[2].index],
          'Lboxno':1,
          "Oabo":this.Oabo,
          "Order_items":this.all_order
        }
        wx.getStorage({
          key: 'token',
          success: function(res){
            token = res.data
            that.submitAll(token,params)
            that.$apply()
          }
        })



      }
    }
  }
</script>
<style scoped lang="less" rel="stylesheet/less">
  @import "../styles/common";
  .m-place-order{
    width: 100%;
    background-color: #f8f8f8;
    .m-head{
      width: 100%;
      height: 600rpx;
      .m-head-back{
        background-color: @common-color;
        height: 296rpx;
        width: 100%;
      }
      .m-head-content{
        position: absolute;
        top: 0;
        left: 40rpx;
        width: 630rpx;
        height: 750rpx;
        background-color: #fff;
        border-radius: 2px;
        padding: 0 20rpx;
        border: 1px solid #f8f8f8;
        .m-li-more{
          font-size: 30rpx;
          /*margin: 0 20rpx;*/
          padding: 25rpx 0;
          border-bottom: 1px solid @border-color;
          &:last-child{
            border-bottom: none;
          }
        }
      }
    }
    .m-content{
      margin: 470rpx 40rpx 40rpx 40rpx;
      background-color: #fff;
      border: 1px solid #f8f8f8;
      .m-li-more{
        font-size: 30rpx;
        margin: 0 20rpx;
        padding: 20rpx;
        text-align: right;
      }
      .m-li-m{
        margin: 0 20rpx;
        padding: 20rpx  0;
        font-size: 30rpx;
        border-bottom: 1px solid @border-color;
        display: flex;
        flex-flow: row;
        align-items: center;
        justify-content: space-between;
        .m-label{
          padding: 5rpx 10rpx;
          color: #f4690c;
          background-color: #FEF0F4;
          border: 1px solid #f4690c;
          border-radius: 5px;
        }
        .m-coupon{

        }
        .m-total{

        }
      }
    }
    .m-remark{
      margin: 0 40rpx 140rpx 40rpx;
      background-color: #fff;
      border: 1px solid #f8f8f8;
      padding: 0 20rpx;
      .m-li{
        font-size: 30rpx;
        padding: 30rpx 0;
        border-bottom: 1px solid #dfdfdf;
        /*&:last-child{*/
        /*border-bottom: none;*/
        /*}*/
        .picker{
          .m-select{
            font-style: normal;
            color: @common-color;
            float: right;
            &:before{
              content: '';
              display: block;
              clear: both;
            }
          }
        }
        .m-input-box{
          display: flex;
          flex-flow: row;
          align-items: center;
          .m-input{

          }
        }
      }
      /*.m-li:last-child{*/
        /*border-bottom: none;*/
      /*}*/
    }
    .m-foot{
      position: fixed;
      bottom: 0;
      width: 100%;
      padding: 20rpx;
      border-top: 1px solid @border-color;
      background-color: #fff;
      display: flex;
      flex-flow: row;
      justify-content: space-between;
      align-items: center;
      z-index: 100;
      /*background-color: rgba(0,0,0,0.5);*/
      .m-car{
        position: relative;
        .m-num{
          position: absolute;
          right: -5rpx;
          top: -10rpx;
          width: 40rpx;
          height: 40rpx;
          font-size: 20rpx;
          text-align: center;
          color: #ffffff;
          line-height: 40rpx;
          border-radius: 50%;
          background-color: #f4690c;
        }
      }
      .m-btn{
        width: 150rpx;
        height: 80rpx;
        line-height: 80rpx;
        margin-right: 40rpx;
        border: 1px solid @border-color;
        border-radius: 20px;
        text-align: center;
        background-color: #f8f8f8;
        &.m-active{
          background-color: @common-color;
          color: #ffffff;
          border-color: #ffffff;
        }
      }
    }
  }
</style>
