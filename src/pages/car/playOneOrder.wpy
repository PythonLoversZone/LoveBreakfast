<style scoped lang="less" rel="stylesheet/less">
    @import "../../styles/common";
    .my-playOneOrder{
      width: 100%;
      font-size: 28rpx;
      padding-bottom:80rpx;
      .my-top{
        .my-row{
          width: 630rpx;
          padding: 40rpx 60rpx;
          border-bottom: 0.7px solid @border_color;
          .flex-row(flex-start);
          .my-label{
            width: 114rpx;
            margin-left: 38rpx;
          }
          .my-pick{
            width: 440rpx;
            height: 40rpx;
            display: flex;
            flex-flow: row;
            align-items: center;
            justify-content: flex-end;
          }
        }
      }
      .my-product-info{
        .my-text{
          height: 46rpx;
          line-height: 46rpx;
          width: 630rpx;
          padding: 40rpx 60rpx;
        }
        .my-row{
          width: 630rpx;
          padding: 20rpx 60rpx;
          .flex-row(space-between);
          .my-left{
            .flex-row(flex-start);
          }
          .my-price{
            color: @main_color;
            text-align: right;
            width: 170rpx;
            .my-num{
              color: @grey_color;
              margin-left: 20rpx;
            }
          }
          .my-you{
            display: flex;
            flex-flow: row;
            align-items: center;
            justify-content: space-between;
          }

        }
        .my-total{
          text-align: right;
          width: 630rpx;
          padding: 40rpx 60rpx;
        }
      }
      .my-other{
        margin-bottom: 140rpx;
      }
      .my-foot{
        position: fixed;
        bottom: 0;
        left: 0;
        background-color: #fff;
        z-index: 1001;
        border-top: 0.7px solid @border_color;
        width: 630rpx;
        padding: 40rpx 60rpx;
        .flex-row(space-between);
        .my-btn{
          width: 184rpx;
          height: 60rpx;
          line-height: 60rpx;
          font-size: 32rpx;
          background-color: @main_color;
          color: #fff;
          text-align: center;
          border-radius: 10px;
        }
      }
    }
  .my-modal{
    background-color: rgba(255,255,255,0.8);
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 1000;
    .my-scroll{
      width: 660rpx;
      height: 400rpx;
      padding: 20rpx 0;
      background-color: #fff;
      border-radius: 20px;
      border: 1px solid @border_color;
      box-shadow: 2px 2px 5px #888888;
      position: absolute;
      bottom: 360rpx;
      left: 45rpx;
      overflow-y: auto;
      .m-modal-content{
        width: 660rpx;
        height: 400rpx;
        padding: 20rpx 0;
        display: flex;
        flex-flow: column;
        align-items: center;
        justify-content: center;
      }
    }
  }
    .m-over{
      width: 300rpx;
      overflow: hidden;
      text-overflow:ellipsis;
      white-space:nowrap;
    }
</style>
<template>
  <view class="my-playOneOrder">
    <view class="my-top">
       <view class="my-row">
         <image src="/images/icon-loc.jpg" style="width:40rpx;height:40rpx;"/>
         <view class="my-label">取餐点</view>
         <picker bindchange="pointChange" value="{{point.point_index}}" range="{{point.point_name}}">
           <view class="my-pick">
             <view>{{point.point_name[point.point_index]}}</view>
             <image src="/images/icon-more.jpg" style="width: 12rpx;height: 20rpx;margin-left: 20rpx;"/>
           </view>
         </picker>
       </view>
      <view class="my-row">
        <image src="/images/icon-date.jpg" style="width:40rpx;height:40rpx;"/>
        <view class="my-label">取餐日期</view>
        <picker mode="date" value="{{date}}" start="{{nowDate}}" end="" bindchange="bindDateChange">
          <view class="my-pick">
            <view>{{date}}</view>
            <image src="/images/icon-more.jpg" style="width: 12rpx;height: 20rpx;margin-left: 20rpx;"/>
          </view>
        </picker>
      </view>
      <view class="my-row">
        <image src="/images/icon-date.jpg" style="width:40rpx;height:40rpx;"/>
        <view class="my-label">取餐时间</view>
        <picker mode="time" value="{{time}}" start="06:01" end="22:01" bindchange="bindTimeChange">
          <view class="my-pick">
            <view>{{time}}</view>
            <image src="/images/icon-more.jpg" style="width: 12rpx;height: 20rpx;margin-left: 20rpx;"/>
          </view>
        </picker>
      </view>
      <view class="my-row">
        <image src="/images/icon-personal.jpg" style="width:40rpx;height:40rpx;"/>
        <view class="my-label">联系人</view>
        <view class="my-pick">{{user_ifo.USname}}</view>
      </view>
      <view class="my-row">
        <image src="/images/icon-tel.jpg" style="width:40rpx;height:40rpx;"/>
        <view class="my-label">联系方式</view>
        <view class="my-pick">{{user_ifo.UStelphone}}</view>
      </view>
      <view class="my-row" @tap="showModal">
        <image src="/images/icon-gift.jpg" style="width:40rpx;height:40rpx;" />
        <view class="my-label">优惠券</view>
        <view class="my-pick" wx:if="{{!choose_ticket }}">
          <view>选择优惠方式</view>
          <image src="/images/icon-more.jpg" style="width: 12rpx;height: 20rpx;margin-left: 20rpx;"/>
        </view>
        <view class="my-you">
          <span class="m-coupon" wx:if="{{choose_ticket.COcut }}">折扣：{{choose_ticket.COcut }} </span>
          <span class="m-coupon" wx:if="{{choose_ticket.COuse }}"> {{choose_ticket.COuse}}</span>
        </view>
      </view>
    </view>
    <view class="my-product-info">
      <view class="my-text">订单详情：</view>
      <view class="my-row" wx:for="{{all_order}}" wx:key="item">
        <view class="my-left">
          <view>{{index + 1}}</view>
          <image src="{{item.PRimage}}" style="width: 90rpx;height: 90rpx;margin: 0 30rpx;"/>
          <view class="m-over">{{item.PRname}}</view>
        </view>
        <view class="my-price">￥{{item.PRprice}} <span class="my-num">X{{item.CAnumber}}</span></view>
      </view>
      <view class="my-total">合计：<span class="my-price">¥{{total_money}}</span></view>
    </view>
    <view class="my-top my-other">
      <view class="my-row">
        <image src="/images/icon-money.jpg" style="width:40rpx;height:40rpx;"/>
        <view class="my-label">支付方式</view>
        <picker bindchange="bindPickerChange1" value="{{play_index}}" range="{{play_way}}">
            <view class="my-pick">
              <view>{{play_way[play_index]}}</view>
              <image src="/images/icon-more.jpg" style="width: 12rpx;height: 20rpx;margin-left: 20rpx;"/>
            </view>
        </picker>

      </view>
      <view class="my-row">
        <image src="/images/icon-remark.jpg" style="width:40rpx;height:40rpx;"/>
        <view class="my-label">备注</view>
        <view class="my-pick"><input type="text" bindconfirm="inputChange"></view>
      </view>
    </view>
    <view class="my-foot">
      <view>合计:<span class="my-price">¥{{total_money}}</span></view>
      <view class="my-btn" @tap="placeAnOrder">支  付</view>
    </view>
    <view class="my-modal" catchtouchmove="Touch" wx:if="{{show_modal}}" catchtap="cancelModal">
      <view class="my-scroll">
        <scroll-view scroll-y="true"  catchtouchmove="modalTouch">
          <view class="m-modal-content">
            <view wx:if="{{card_data.length == 0}}">无可用优惠券</view>
            <view wx:else class="my-card-box">
              <repeat for="{{card_data}}" key="index" index="index" item="item">
                <card :list.sync="item" @cardTap.user="cardTap" :choose.sync="choose_ticket"></card>
              </repeat>
            </view>
          </view>
        </scroll-view>
      </view>
    </view>
  </view>
</template>

<script>
    import wepy from 'wepy';
    import api from '../../api/api';
    import tip from '../../utils/tip';
    import card from '../../components/card';
    export default class playOneOrder extends wepy.page {
        config = {
            navigationBarTitleText: ''
        }
        data = {
          user_ifo:{},
          play_way:['微信支付'],
          play_index:0,
          show_modal:false,
          card_data:[],
          choose_ticket:null,
          all_order:[],
          total_money:0,
          point:{
            point_id:[],
            point_name:[],
            point_img:[],
            point_index:0
          },
          date:'',
          time:'06:00',
          nowDate:'',
          remark:''
        }
        components={
          card:card
        }
        async get_all_info(token) {
          let that = this;
          tip.loading();
          let res = await api.all_info({method:'GET',query:{
              token:token
            }});
          if(res.data.status == 200){
            console.log(res)
            that.user_ifo = res.data.data;
            that.$apply();
            tip.loaded();
          }else{
            tip.error(res.data.message);
          }
        }
        async get_card(token) {
          let that = this;
          tip.loading();
          let res = await api.get_cardpkg({method:'GET',query:{
              token:token
            }});
          if(res.data.status == 200){
            that.card_data = res.data.data;
            that.$apply();
            tip.loaded();
          }else{
            tip.error(res.data.message);
          }
        }
        async get_select_product(token,ASid,CAid) {
          let that = this;
          tip.loading();
          let res = await api.get_select_product({method:'POST',query:{
              CAid:CAid
            }, token:token,ASid:ASid });
          if(res.data.status == 200){
            that.all_order = res.data.data;
            let len = this.all_order.length;
            let param = {};
            param = {
              "productlist":[]
            }
            for(let i=0; i<len; i++){
              param.productlist[i] = {};
              param.productlist[i].PRid = this.all_order[i].PRid;
              param.productlist[i].PRnumber = this.all_order[i].CAnumber;
            }
            that.productList = param.productlist;
              let COid = that.choose_ticket?that.choose_ticket.COid:'';
            that.order_price(that.productList,COid,token);
            that.$apply();
            tip.loaded();
          }else{
            tip.error(res.data.message);
          }
        }
        async order_price(productlist,COid,token) {
          let that = this;
          tip.loading();
          let res = await api.order_price({method:'POST',query:{
              productlist:productlist,
              COid:COid
            },token:token});
          if(res.data.status == 200){
            that.total_money = res.data.data.OMprice;
            that.$apply();
            tip.loaded();
          }else{
            tip.error(res.data.message);
          }
        }
        async get_addabo(ASid,CAid) {
          let that = this;
          tip.loading();
          let res = await api.get_addabo({method:'POST',query:{
              ASid:ASid,
              CAid:CAid
            }});
          if(res.data.status == 200){
              that.point.point_name[0] = res.data.data.AAmessage;
              that.point.point_id[0] = res.data.data.AAid;
              that.point.point_img[0] = res.data.data.AAimage;
            that.$apply();
            tip.loaded();
          }else{
            tip.error(res.data.message);
          }
        }
        onLoad(options) {
          let now = new Date();
          this.nowDate = now.getFullYear() +'-'+ (now.getMonth()  <9 ? ('0' + (Number(now.getMonth()) +1)) :( Number(now.getMonth()) +1) ) + '-' + (now.getDate() <10?('0'+ now.getDate()):now.getDate());
          this.date = this.nowDate;
          let CAid = [];
          let res = wx.getStorageSync('token');
          let resId = wx.getStorageSync('ASid');
          this.get_all_info(res);
          this.get_card(res);
          CAid = options.CAid.split(',');
          this.get_select_product(res,resId,CAid);
          this.get_addabo(resId,CAid);
        }

        methods = {
          bindDateChange(e){
              this.date = e.detail.value;
              this.$apply();
          },
          bindTimeChange(e){
            this.time= e.detail.value;
            this.$apply();
          },
          modalTouch(e){
            console.log(e)
          },
          Touch(e){
            return false;
          },
          inputChange(e){
            this.remark = e.detail.value;

          },
          cancelModal(){
            this.show_modal = false;
            this.$apply();
          },
          showModal(){
            this.show_modal = true;
            this.$apply();
          },
          cardTap(v){
            let that = this
            this.show_modal = false;
            if(this.choose_ticket != null) {
              if(this.choose_ticket.COid == v.COid) {
                this.choose_ticket = null;
              }else {
                this.choose_ticket = v;
              }
            }else {
              this.choose_ticket = v;
            }
            let token =  wx.getStorageSync('token');
            let COid = that.choose_ticket?that.choose_ticket.COid:'';
            that.order_price(that.productList,COid,token);
            that.$apply();
          },
          pointChange(e){
            this.point.point_index = e.detail.value;
            this.$apply();
          },
          async placeAnOrder(e){
            let that = this;
            if(that.point.point_index == -1){
              tip.error("请选择取餐点");
              return false;
            }
            if(that.date == ''){
              tip.error("请选择取餐时间");
              return false;
            }
            let _date = new Date();
            let params = {};
            params ={
              "OMtime":_date.getFullYear() + '-' + ((_date.getMonth()+1)>=10 ?(_date.getMonth()+1):'0'+(_date.getMonth()+1) ) + '-' +(_date.getDate()>=10?_date.getDate():'0'+_date.getDate())+' '+_date.getHours()+':'+_date.getMinutes(),
              "OMdate":this.date + ' ' + this.time,
              "AAid":this.point.point_id[this.point.point_index],
              "OMabo":this.remark,
              "OMtotal":this.total_money,
              "Order_items":this.productList
            }
            let resToken = wx.getStorageSync('token');
            let resOrder = await api.make_main_order({method:'POST',query:params, token:resToken});
            if(resOrder.data.status == 200){
              let OMid = resOrder.data.data.OMid;
              await wx.login({
                success: function(res) {
                  if (res.code) {
                    console.log(res.code, 'this is code')
                    let successFun = (res3) => {
                      console.log(res3, 'gg')
                      let timeStamp = res3.data.timeStamp.toString()
                      wx.requestPayment({
                        'appId': res3.data.appId,
                        'timeStamp': timeStamp,
                        'nonceStr': res3.data.nonceStr,
                        'package': res3.data.package,
                        'signType': res3.data.signType,
                        'paySign': res3.data.paySign,
                        'success':function(res){
                          tip.success("支付成功")
                          setTimeout( () => {
                            wepy.navigateTo({
                              url: '/pages/order/orderDetail?OMid='+OMid
                            })
                          }, 1000)
                        },
                        'fail':function(res){
                          tip.error("支付失败")
                          setTimeout( () => {
                            wepy.switchTab({
                              url: '/pages/order/index?OMid='+OMid
                            })
                          }, 1000)
                        }
                      })
                    }
                    let failFun = (res) => {
                      console.log(res, 'fail!')
                      tip.error("服务器开小差了")
                    }
                    api.payconfig({method:'GET',query: {OMid: OMid, code: res.code }}).then(successFun, failFun)
                  } else {
                    console.log('获取用户登录态失败！' + res.errMsg)
                  }
                }
              });
            }else{
              tip.alert(resOrder.data.message);
            }
          },
        }
    }
</script>
