<style scoped lang="less" rel="stylesheet/less">
@import "../styles/common";
  .m-header-box {
    width: 100%;
    height: 280rpx;
  }
    .login_block {
      width: 100%;
      height: 280rpx;
      display: flex;
      align-items: center;
      float: right;
    }
      .m-button {
        width: 400rpx;
      }
    .m-header-content {
      width: 100%;
      margin: 0 auto;
      text-align: center;
      padding-top: 40rpx;
      .m-avatar {
        width: 150rpx;
        height: 150rpx;
        border-radius: 100px;
      }
      .m-nickname {
        font-size: 35rpx;
        padding-top: 15rpx;
      }
    }
  .m-info_block-list {
    margin-top: 10rpx;
    padding: 0rpx 60rpx;
    width: 100%;
    font-size: 30rpx;
    box-sizing: border-box;
    .m-item {
      border-top: 2rpx solid #dbdbdb;
      background: #fff;
      padding: 34rpx 0rpx;
      display: flex;
      align-items: center;
      justify-content: space-between;
      width: 100%;
    }
    .m-item:last-child {
      border-bottom: 2rpx solid #dbdbdb;
    }
      .m-item_content {
        display: flex;
        align-items: center;
        justify-content: space-between;
        .m-item_img {
          width: 42rpx;
          height: 42rpx;
        }
        .m-text {
          margin-left: 30rpx;
          color: @grey-font;
        }
      }
      .m-arrow {
        width: 30rpx;
        height: 30rpx;
      }
      .m-item-info {
        width: auto;
        height: 15px;
      }
  }
</style>
<template>
  <view class="m-header-box">
    <view class="m-header-content">
      <image class="m-avatar" src="../images/test.jpeg"></image>
      <view class="m-nickname">{{ userInfo.Uname }}</view>
    </view>
  </view>
  <view class="m-info_block-list">
    <navigator class="m-item" url="/pages/baseInfo?name={{userInfo.Uname}}&sex={{userInfo.Usex}}">
      <view class="m-item_content">
        <image class="m-item_img" src="../images/edit.png"></image>
        <view class="m-text">基本信息</view>
      </view>
      <image class="m-arrow" src="../images/more.png"></image>
    </navigator>

    <navigator class="m-item" url="/pages/setUp">

      <view class="m-item_content">
        <image class="m-item_img" src="../images/set.png"></image>
        <view class="m-text">设置</view>
      </view>
      <image class="m-arrow" src="../images/more.png"></image>
    </navigator>
    <view class="m-item">
      <view class="m-item_content">
        <image class="m-item_img" src="../images/order.png"></image>
        <view class="m-text">积分</view>
      </view>
      <view class="m-item-info">{{ userInfo.Ucoin }}</view>
    </view>
    <view class="m-item">
      <view class="m-item_content">
        <image class="m-item_img" src="../images/invite.png"></image>
        <view class="m-text">专属邀请码</view>
      </view>
      <view class="m-item-info">{{ userInfo.Uinvate }}</view>
    </view>
  </view>
</template>

<script >
  import wepy from 'wepy';
  import tip from '../utils/tip';
  import api from '../api/api';



  export default class Personal extends wepy.page{
    config = {
      navigationBarTitleText: '个人中心'
    }
    data = {
      userInfo: { Uname: '', Usex: ''},
      isToken: false
    }
    async getPersonInfo(params) {
      let token = params
      let that = this;
      tip.loading();
      let test = api.get_person_info + `?token=${token}`
      wx.request({
        url:api.get_person_info + `?token=${token}`,
        method:'GET',
        data:{token:token},
        header:{
          'content-type':'application/json',
        },
        success:function (res) {
          tip.loaded()
          if(res.data.status == '200'){
            that.$parent.globalData.userInfo = res.data.data;
            that.userInfo = res.data.data;
            if(that.userInfo.Uname == null) that.userInfo.Uname = ''
            that.$apply();
          }
        }
      })
    }
    async onShow() {
      let token = '';
      let that = this;
      try {
        let res = await wepy.getStorage({key: 'token'})
        token = res.data
      }catch(err){
        wx.navigateTo({
            url: '/pages/login'
          })
      }
      that.getPersonInfo(token)
    }
    methods = {
    }
  }
</script>
